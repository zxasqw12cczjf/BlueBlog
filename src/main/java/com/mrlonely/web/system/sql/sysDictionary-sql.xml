<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mrlonely.web.system.dao.SysDictionaryDao">

	<parameterMap id="parameterMap" type="com.mrlonely.web.system.entity.SysDictionary"></parameterMap>
	<resultMap id="resultMap" type="com.mrlonely.web.system.entity.SysDictionary">
		<result property="id" column="id"/>
		<result property="code" column="code"/>
		<result property="name" column="name"/>
		<result property="groupId" column="group_id"/>
		<result property="sort" column="sort"/>
	</resultMap>
	
	<sql id="columnSql">
		<trim suffixOverrides=",">
			t.id,
			t.code,
			t.name,
			t.group_id,
			t.sort,
		</trim>
	</sql>
	
	<select id="find" parameterMap="parameterMap" resultMap="resultMap">
		select
			<include refid="columnSql"></include>
		from sys_dictionary t
		<where>
			t.group_id is null
			<if test="code != null and code != ''">
				and t.code like concat('%',#{code},'%')
			</if>
			<if test="name != null and name != ''">
				and t.name like concat('%',#{name},'%')
			</if>
		</where>
	</select>
	
	<select id="getById" parameterType="java.lang.String" resultMap="resultMap">
		select
			<include refid="columnSql"></include>
		from sys_dictionary t
		where t.id = #{value}
	</select>
	
	<select id="getByGroupId" parameterType="java.lang.String" resultMap="resultMap">
		select
			<include refid="columnSql"></include>
		from sys_dictionary t
		where t.group_id = #{value}
	</select>
	
	<select id="getByGroupCode" parameterType="java.lang.String" resultMap="resultMap">
		select
			<include refid="columnSql"></include>
		from sys_dictionary t
		where t.code = #{value}
	</select>
	
	<insert id="add" parameterMap="parameterMap">
		insert into sys_dictionary
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			code,
			name,
			group_id,
			sort,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id},
			#{code},
			#{name},
			#{groupId},
			#{sort},
		</trim>
	</insert>
	
	<insert id="batchAdd" parameterType="java.util.List">
		insert into sys_dictionary
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			code,
			name,
			group_id,
			sort,
		</trim>
		values
		<foreach collection="list" item="item" separator=",">
			<trim prefix="(" suffix=")" suffixOverrides=",">
				#{item.id},
				#{item.code},
				#{item.name},
				#{item.groupId},
				#{item.sort},
			</trim>
		</foreach>
	</insert>
	
	<update id="update" parameterMap="parameterMap">
		update sys_dictionary
		<set>
			code = #{code},
			name = #{name},
			group_id = #{groupId},
			sort = #{sort},
		</set>
		where id = #{id}
	</update>
	
	<update id="updateNotNull" parameterMap="parameterMap">
		update sys_dictionary
		<set>
			<if test="code != null">
			code = #{code},
			</if>
			<if test="name != null">
			name = #{name},
			</if>
			<if test="groupId != null">
			group_id = #{groupId},
			</if>
			<if test="sort != null">
			sort = #{sort},
			</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="java.lang.String">
		delete from sys_dictionary where id = #{value}
	</delete>
	
	<delete id="batchDelete" parameterType="java.util.List">
		delete from sys_dictionary where id in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
	<delete id="deleteByGroupId" parameterType="java.lang.String">
		delete from sys_dictionary where group_id = #{value}
	</delete>
	
</mapper>